Use `./build.sh` to build CiCo and `./run.sh` to run it if using the command line. You can otherwise use your IDE to build and run CiCo.

# Module 2: Sample test for the happy path. 

## Test steps
1. Build and run CiCo.
2. Enter 00000000 into the field and click Update.
3. Wait 11 seconds.

## Expected results:
* The status panel should appear after step 2.
* The main panel should appear after step 3.

# Module 2: Sample test for invalid card numbers.

## Test steps
1. Build and run CiCo.
2. Enter 99999999 into the field and click Update.
3. Wait 11 seconds.

## Expected results:
* The error panel should appear after step 2.
* The main panel should appear after step 3.

# Module 2: Help users recognize, diagnose, and recover from errors

## Test steps
1. Build and run CiCo.
2. Enter 99999999 into the field and click Update.

## Expected results
* The panel should display "Please show your card to staff to validate." after step 2.

# Module 2: Help and documentation

## Test steps
1. Build and run CiCo.

## Expected results
* The version number should be displayed after "CiCo" at the bottom.


# Module 3: Visibility of system status 

## Test steps
1. Build and run CiCo.
2. Enter 00000000 into the field and click Update.
3. Wait for status panel to close.
4. Enter 00000000 into the field and click Update.

## Expected results
* Should display "Checked IN" after step 2.
* Should display "Checked OUT" after step 4.

# Module 3: Match between system and the real world

## Test steps
1. Build and run CiCo.
2. Enter 00000000 into the field and click Update.

## Expected results
* Should display "Developer" for the user name.

# Module 4: Error prevention for card number input

## Test steps
1. Build and run CiCo.
2. Attempt to type "abcd123" into the card number field.

## Expected results
* Only "123" should appear in the field, with all non-numerical characters ("abcd") being ignored.


# Module 5: User control- Skip timeout button 

## Test steps
1. Build and run CiCo.
2. Enter 00000000 into the field and click Update.
3. System starts timeout countdown, Procced to click the continue button before the timeout completes.


## Expected results
* Should display "Continue" when clicked the system should reset to initial state ready for the next user/employee

# Module 5: User control- Skip timeout button (Timout test)

## Test steps
1. Build and run CiCo.
2. Enter 00000000 into the field and click Update.
3. System starts timeout countdown let the timeout run to verify it still works.


## Expected results
* Should display "Continue" when left alone the timeout operates as it should resetting to the initial state for the next user/employee.